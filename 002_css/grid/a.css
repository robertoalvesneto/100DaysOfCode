/*--FORMATAÇÃO DE VISUALIZAÇÃO GERAL--*/
.container-roxo {
  color: blueviolet;
  border: 2px solid blueviolet;
}
.container-laranja {
  color: orange;
  border: 2px solid orange;
}
.roxo {
  background-color: blueviolet;
}
.laranja {
  background-color: orange;
}

.container {
  border-radius: 20px;
  padding: 20px 0px;
}

.item {
  width: auto;
  border-radius: 10px;
  text-align: center;
  font-size: 40px;
  color: white;
  padding: 40px 0px;
}

.texto {
  text-align: center;
  margin: 20px 0px;
  font-size: 40px;
}

/*---*/
.container-geral {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
}

/*--PRIMEIRO EXEMPLO--*/
.grid1 {
  display: grid;
  grid-template-columns: auto 100px 200px auto;
  grid-template-rows: auto auto 300px;
  gap: 10px 10px;
}

/*--SEGUNDO EXEMPLO--*/
.grid2 {
  display: grid;
  /*Esse fr é o mesmo esquema do flex, cada valor representa um grupo, onde o 
    2 tem o dobro do tamanho do 1, e assim vai.*/
  grid-template-columns: 1fr 2fr 1fr;
  gap: 10px 100px;
}

/*--TERCEIRO EXEMPLO--*/
.grid3 {
  display: grid;
  /*Repete o que tem dentro do repeat, mandei repetir 3vezes a estrutura
    1fr 2fr. No final é o mesmo que digitar 1fr 2fr 1fr 2fr 1fr 2fr*/
  grid-template-columns: repeat(3, 1fr 2fr);
  gap: 10px 100px;
}

/*--QUARTO EXEMPLO--*/
.grid4 {
  display: grid;
  /*No caso do fr o tamanho de cada coluna se adapta enquanto o numero de
    colunas eh fixo, já o auto-fill a quantidade de colunar fica variando até
    preencher toda a largura da tela com o tam de itens que demos.
    minmax() determina um tam min e max*/
  grid-template-columns: repeat(auto-fill, minmax(200px, 300px));
  gap: 10px 100px;
}

/*--QUINTO EXEMPLO--*/
.grid5 {
  display: grid;
  grid-template-columns: repeat(3, minmax(200px, auto));
  gap: 10px 100px;
}

.item1 {
  grid-column-start: 1;
  grid-column-end: 4;
}

/*Usando a forma resumida onde é definido start e end da linha e coluna de uma
vez, a baixo esta escrito como fica a estrutura do grid area*/
.item2 {
  grid-area: 2 / 1 / 6 / 3;
  /*
    grid-row-start: 2;
    grid-column-start: 1;
    grid-row-end: 6;
    grid-column-end: 3;
    */
}

/*Usando a forma resumida, start e end juntos*/
.item3 {
  grid-column: 3 / 4;
  grid-row: 3 / 5;
}

.item5 {
  grid-column: 1 / 4;
}

/*--SEXTO EXEMPLO--*/
.grid6 {
  display: grid;
  grid-template-areas:
    "item1 item1 item1"
    "item2 item2 item3"
    "item2 item2 item4"
    "item2 item2 item5"
    "item6 item6 item6";
  gap: 10px 100px;
}

.i1 {
  grid-area: item1;
}
.i2 {
  grid-area: item2;
}
.i3 {
  grid-area: item3;
}
.i4 {
  grid-area: item4;
}
.i5 {
  grid-area: item5;
}
.i6 {
  grid-area: item6;
}
